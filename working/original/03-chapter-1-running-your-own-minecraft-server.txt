<html><body>
# Chapter 1: Running Your Own Minecraft Server

I began playing Minecraft in 2010 in single-player mode. It was a fun and relaxing way to pass the time. Later I installed the Minecraft server software on one of the computers on our kitchen table. My youngest son, Sean, had just finished his homework, so I asked him if he wanted to join the home server. Seeing each other in the game was quite a novelty. Soon my eldest daughter, Kate, joined in, and we began some serious building together (Figure 1.1). Building in Minecraft is much more fun with others. 

[AUTHOR NOTE: images/chapter-01/Client\_Server\_Kids.png]

![](images/chapter-01/Client_Server_Kids.png)

<caption>Figure 1.1: Multiplayer Minecraft</caption>


When You play Minecraft in multiplayer mode, chatting, building, and mining with other players, you do so on a Minecraft *server.* The Minecraft server is just a computer program (like the Minecraft client, Microsoft Word, or Internet Explorer) that provides a shared virtual place for Minecraft players to connect, build, and chat. You don't need to buy any special type of computer to run a Minecraft server. You can run one on your laptop computer&mdash;assuming it's not too old. Minecraft server software won't run on an iPad, Android tablet, or phone. It runs only on Windows, Macintosh, and Linux computers. 

## Client-Server Networking
Minecraft Multiplayer is "client-server," which means that one or more "client" computers (computers running the Minecraft game) can connect to a central "server" (a computer that is responsible for storing all of the Minecraft World information so that players can play together in the same world). Figure 1.2 shows a simple client-server network with just one client (Player) connected to a server.

[AUTHOR NOTE: images/chapter-01/Client\_Server1.png]

![](images/chapter-01/Client_Server1.png)

<caption>Figure 1.2: A simple client-server network</caption>
[PRODUCTION: please have an artist render this image]


The client must be connected to the server over some kind of network. The line between the Client and the server in Figure 1.2 represents the network. A server with just one client computer isn't much fun, though. Servers really become fun when many players are connected to the same server, as in Figure 1.3.

[AUTHOR NOTE: images/chapter-01/Client\_Server2.png]

![](images/chapter-01/Client_Server2.png)

<caption>Figure 1.3: A client-server network with many clients</caption>
[PRODUCTION: please have an artist render this image]

In Figure 1.3, the server must chat with all of the connected clients. For example, if it starts raining in the game, the server must send a message to each client that it's begun raining. In Minecraft Multiplayer, the server is responsible for many things. The server decides what the weather will be like in the in-game world, what time of day it is, and so on. This is so that the time of day and weather *will be the same for all connected players*. 

You'll notice that in Figure 1.3, the server is shown as a separate computer. This is just for illustration. While often, server software *does* run on a separate computers, you won't need a separate computer to run Minecraft server or to follow the tutorials in this book. In fact, for learning how to create Minecraft plugins and to get the best from this book, I recommend running a Minecraft server on the same computer you play Minecraft on. This means your computer will act as both a client and a server (see Figure 1.4). This is by far the most convenient and cost-effective way to run a server and learn how to create Minecraft server plugins.

[AUTHOR NOTE: images/chapter-01/Client\_Server\_Combined.png]

![](images/chapter-01/Client_Server_Combined.png)

<caption>Figure 1.4: A computer that is both a client and a server</caption>
[PRODUCTION: please have an artist render this image]

When you play Minecraft in multiplayer mode, before you can connect to a server, you have to enter the server details into the game. The server details are a hostname or an IP address; either one of these provides a way for the Minecraft client (the game) to connect to a computer running the Minecraft server. The hostname or IP address are how computers uniquely identify one another on the Internet, much like how you identify each other by name and/or address. When you run a Minecraft server on your own computer, you will use a special hostname called localhost or IP address 127.0.0.1. I'll talk more about these in the following sections.

Anyone can run a server. In the following sections, I'll show you how to set up and run your own Minecraft server.

## Why Run Your Own Server?

Why should you run your own server? Running your own server means you have total control over the Minecraft world you want to create and share with your friends. You can decide what type of server and world you and your friends will play in, what server plugins to install, what rules will govern the server and world, and who can and cannot join the server. As a server *operator*, you will have access to commands that normal players don't. You can control the weather using Minecraft commands, start and stop thunderstorms, or even change the time of day. You can also install popular Minecraft server mods like Hunger Games and MobArena. The real power of running your own server comes when you add ScriptCraft, which makes it easier to create your own Minecraft server plugins. If you have an idea for a new Minecraft mod or would like to do something that current mods don't support, you can create your own mod and test it on your own server. 

Running your own server is essential for plugin development. Minecraft server plugin developers run their own servers because they need to be able to test their creations before releasing them into the wild for others to use. No serious modder would consider releasing a plugin that they hadn't first tested on their own private servers. 

## Which Minecraft Server Software Should I Use?

There are a couple of different flavors of Minecraft server. Mojang provides its own server software that can be downloaded from the Minecraft.net website. This was the first server software released for Minecraft. This is often referred to as the "vanilla" Minecraft server. At the time of writing, it doesn't provide any way to add plugins, although this will probably change once Mojang releases the official Plugin API. The Minecraft server provided by Mojang is fine if you want to run a server with no modifications. The problems with running such a server are that there's no reliable way to protect against *griefing*. 

[AU: if there are a lot of these "term" sections, we could set them as notes so that they are set off, perhaps by some color, from the main text. but we didn't design these, so I'd have to ask that they be added...if you're interested. that element would make it helpful if, for instance, if they needed to appear in the middle of a section, where the previous section continues after the term section ends, as opposed to the next heading coming after.]

[WALTER: There are 9 TERM sections throughout the book. It's probably best that these paragraphs are offset with a different color so they stand out from the surrounding text]

### Term: Griefing 
Griefing is when a player in a multiplayer video game deliberately irritates and harasses other players within the game, using aspects of the game in unintended ways. A griefer enjoys annoying other users by destroying other players' work, cursing and harassing players and server administrators.

The standard (vanilla) Minecraft server has only limited ways to protect against griefing. Because of this, other more popular Minecraft server software arose&mdash;server software that allowed server administrators to more strictly control who could and could not join the server and to enforce penalties and bans on players who misbehaved. Popular alternatives such as CraftBukkit&mdash;which youe'll use in this book&mdash;let administrators add any number of antigriefing plugins to make the server as safe, secure, and player-friendly as possible.

## CraftBukkit

[AU: how did you want the above to appear? there's no real design element for it other than a regular paragraph and then the URL...?]
[WALTER: I've removed the pull-quote which this comment refered to. The pull-quote didn't really add anything to the book]

CraftBukkit has become the most popular Minecraft server software with a thriving community of plugin developers. In 2012 Mojang hired the CraftBukkit team to work on Minecraft and the Minecraft API. In this book, you'll use CraftBukkit as your Minecraft server software. CraftBukkit is the server software, but it has an API (a system that plugin developers can use to extend the server), which is called Bukkit. You'll look at the Bukkit API in more detail later. For now, all you need to know is that CraftBukkit is the name of the server software, and Bukkit is the API on top of which it's built (see Figure 1.5).

[AUTHOR NOTE: images/chapter-01/CraftBukkit\_Bukkit.png]

![](images/chapter-01/CraftBukkit_Bukkit.png)

<caption>Figure 1.5: CraftBukkit is built on Bukkit.</caption>
[PRODUCTION: please have an artist render this image]


CraftBukkit has become so popular because of its underlying API (Bukkit), which makes it easy for plugin developers to extend the Minecraft Multiplayer server. Hundreds of plugins are available for CraftBukkit, including all of the popular multiplayer mini-games such as HungerGames and CaptureTheFlag. Chances are, if you've ever played Minecraft Multiplayer on one of the popular public servers, it's been running CraftBukkit. The CraftBukkit wiki provides a wealth of information for both administrators (the people who run CraftBukkit servers) and developers (the people who create plugins for CraftBukkit). I highly recommend checking it out (*http://wiki.bukkit.org/*).

## Installing CraftBukkit

The first step in constructing your modding workbench is to install CraftBukkit. Unlike many games, Minecraft is in ongoing development. This means new versions of Minecraft are released often. When you purchase and download the Minecraft client, you automatically get new versions of the game when they are released. This is great for players because you get the latest and greatest version for free, which often includes bug fixes and new features. If you've played Minecraft Multiplayer before on one of the popular public servers, you'll know that there's a downside to Mojang's commitment to improving Minecraft: Server software upgrades do not happen as often as client software upgrades. This can lead to client software and server software that are *incompatible*. When the client and server versions are incompatible, they cannot communicate (see Figure 1.6). 

### Term: Bug
*Bugs* in software are errors or mistakes in the software code that can cause problems. Nobody quite knows for sure why errors in software are called bugs, but one story goes that a problem with an early mechanical computer in the 1940s was caused by a moth that somehow found its way inside. The term *bug* had been used to describe errors long before computers came along, so when the engineers captured the moth, they kept it with a note that said "First actual case of bug being found." 

[AUTHOR NOTE: images/chapter-01/mc-server-client-incompat.png]

![](images/chapter-01/mc-server-client-incompat.png)

<caption>Figure 1.6: Compatibility between client and server</caption>
[PRODUCTION: please have artist render this image]

[AUTHOR: here's an example of where it's not going to be clear where the "Term: Bug" section ends if it's just styled as a head 3. I am going to request a note or sidebar element be designed for this, with some background shading, so that it set these sections off from the text. No need to style them differently at all.]
[WALTER: SOUNDS GOOD]

Usually, a compatible version of the Minecraft server software is released shortly after the Minecraft client is upgraded. One thing to keep in mind is that CraftBukkit is an open source and voluntary project&mdash;this means that the people who develop CraftBukkit don't get paid to do so. They do it for fun. Upgrading server software takes a lot of work, and the software needs to be tested (by volunteers) before it can be released. That's why sometimes it may take a while for a new version of the Minecraft server software to be released that is compatible with the latest and greatest client. Be patient and remember that the developers who work on CraftBukkit do it for fun and don't get paid, so posting questions on the CraftBukkit forums asking when will the new version be ready won't speed things up.

At the time of writing, 1.7.8 is the most current version of Minecraft. Figure 1.7 shows what the CraftBukkit website's home page looks like at this time.

[AUTHOR NOTE: images/chapter-01/bukkit-homepage.png]

![](images/chapter-01/bukkit-homepage.png)

<caption>Figure 1.7: CraftBukkit home page</caption>


Clicking the large download button will download the CraftBukkit Recommended Build (see Figure 1.8). The Recommended Build is the version of the CraftBukkit server software that is considered to be the most reliable version because it has undergone the most testing. However, the Recommended Build is not always the most current or up-to-date version of the software. Fortunately, the developers of CraftBukkit also let you download up-to-date versions of the software with the warning that the most up-to-date version may not always be the most reliable version. 

[AUTHOR NOTE: images/chapter-01/bukkit-download1.png]

![](images/chapter-01/bukkit-download1.png)

<caption>Figure 1.8: CraftBukkit download</caption>


Just beneath the prominent Recommended Build button, you'll see a Beta Build link. *Beta* software is software that is "nearly" ready for release. It's software that is functionally complete, meaning the developers have added all of the features they're going to add, but the software still needs to be tested for quality assurance. It's usually OK to run Beta software, but you may come across one or two bugs. If the Beta Build version does not match the current version of Minecraft, then click the Alternate Versions link beneath the Beta Build link. This will take you to the CraftBukkit Builds page where you will see a list of "builds," or versions. Figure 1.9 shows what the download page looks like at the time of writing.

[AUTHOR NOTE: images/chapter-01/bukkit-download2.png]

![](images/chapter-01/bukkit-download2.png)

<caption>Figure 1.9: CraftBukkit builds page</caption>


Along the right side of the page are three big color-coded download buttons. The Green button is for the most recent stable release. Note that though this is the most stable version, it may not be the most up-to-date version or a version that is compatible with the current client. The amber button is for the most recent Beta build. This is a version that is not as stable as the released version but will have undergone some testing and will most likely be in use already on some servers. The red button is for the most recent development build. It's red because it is the least stable version. Development builds will not have undergone the same rigorous testing as Beta or release software. On the other hand, development builds will be the most up-to-date, and chances are, there will be a development build of the server software for the latest version of the client software.

Choosing which version of the server software to use&mdash;Recommended, Beta, or Development&mdash;is a big decision and one I unfortunately can't make for you. If you feel safer using only the Recommended build of CraftBukkit, and that build version is not for the most up-to-date client, then there's a way you can safely and temporarily *downgrade* your Minecraft client software so that it will be compatible with your server software. 

Since version 1.6, the Minecraft Launcher (the software you run on your computer to start the Minecraft client and to upgrade to new versions when they become available) lets you choose which version of the client software to run. By default the Launcher is configured to always download and run the latest version, but you can easily change this using the new profiles feature. The following are step-by-step instructions for changing your Launcher profile to use a different version of Minecraft client:

1. Launch Minecraft.
2. Click the New Profile button on the bottom left of the Launcher screen (see Figure 1.10).
3. Fill in the Profile Name field. For example, you should call it something like Version 1.7.8 (replacing 1.7.8 with the version you've chosen). I find it helpful to include the version name in a new profile so I can see at-a-glance which client version the profile will use.
4. Choose the appropriate version from the Use Version drop-down list (see Figure 1.11).
5. Click the Save Profile button.


[AUTHOR NOTE: images/chapter-01/mc-launcher2.png]

![](images/chapter-01/mc-launcher2.png)

<caption>Figure 1.10: Minecraft Launcher</caption>

[AUTHOR NOTE: images/chapter-01/mc-profile-editor.png]

![](images/chapter-01/mc-profile-editor.png)

<caption>Figure 1.11: Minecraft Profile Editor</caption>


The newly created profile should now be automatically selected in the Profile drop-down list on the main Launcher page. Click the Play button to begin playing using the chosen version of Minecraft client software (see Figure 1.12).

[AUTHOR NOTE: images/chapter-01/mc-launcher3.png]

![](images/chapter-01/mc-launcher3.png)

<caption>Figure 1.12: Profile selection</caption>


By using the profile editor to downgrade your Minecraft client software, you can ensure that your client and server are compatible and that you can play multiplayer Minecraft even when the server software is not as up-to-date as the current latest version of Minecraft client. This means you can always use the most stable Recommended build of CraftBukkit. 

### Term: JAR File
![](images/chapter-01/jar_icon.png)
The CraftBukkit software is downloadable as a `.jar` file. Programs that are created using the Java programming language are often distributed as JAR files and will have a name that ends with `.jar`. JAR is short for **J**ava **AR**chive file. It's an archive of all the code and resources needed by Java to run the software. CraftBukkit is distributed as a JAR file. So too are all of the plugins for CraftBukkit.

Once you've chosen between the Recommended, Beta, and Development versions of CraftBukkit (if you're unsure, choose the Recommended version), click the appropriate color-coded button to begin downloading the software. Depending on which browser software you use (Chrome, Safari, Internet Explorer, or Firefox), the instructions for downloading will differ. Please read the instructions for the browser you use. 

### Download Instructions

1. Create a new folder on your computer called CraftBukkit.
2. Choose either the Recommended, Beta Build, or Development Build at http://dl.bukkit.org/downloads/craftbukkit/ to begin downloading CraftBukkit.
3. Save the CraftBukkit `.jar` file in the folder created in step 1. 
4. Rename the .jar file to `craftbukkit.jar`.

Once downloaded, the next step is to install CraftBukkit on your computer. The instructions are slightly different for each operating system, so skip directly to the instructions for your operating system.

### Installing Bukkit on Windows

1. Open Notepad (you can find it by clicking the Start or Windows button in the bottom left of the screen and then typing Notepad in the search box.
2. Type the following into Notepad:

[KIM: code block here]

         java -Xmx1024M -jar craftbukkit.jar -o true
         PAUSE

   Depending on the name of the file you downloaded earlier, you may need to change `craftbukkit.jar` to match the exact name of the file.
   
3. Save the document as `run.bat` in the folder you created earlier (the same folder where you copied the craftbukkit JAR file). It's important that you change the Save As Type option from Text Documents to All Files. Otherwise, Notepad will try to save the document as `run.bat.txt`, and it will not be executable.

4. Double-click the `run.bat` file you saved in the previous step, and CraftBukkit should start running. If you see the error message "Java is not recognized as an internal or external command, operable program or batch file," then you need to reinstall Java. Java is the programming language Minecraft is written in. It's also the programming language the CraftBukkit Minecraft server is written in. You can download Java by visiting *www.java.com* and following the instructions. If after installing Java you still get the same error, then follow the instructions at *www.java.com/en/download/help/path.xml*.

5. Assuming the server has started (you didn't see any errors), you can shut down the server by issuing the `stop` command at the server console (type `stop` and then hit Enter).

### Installing Bukkit on Mac OS

1. The first thing you'll need to do is install Java. Since OS X 10.7, Java no longer comes bundled with OS X, so you will need to install Java from Apple's Java Install page at *http://support.apple.com/kb/DL1421*.

2. Open TextEdit. (You can find it by typing TextEdit in the Spotlight field in the top right of the screen. Click the magnifying glass icon to bring up Spotlight.)

3. Under the Format menu, choose Make Plain Text and then type the following:
[KIM: code block here]
        #!/bin/bash
        cd "$( dirname "$0" )"
        java -Xmx1024M -jar craftbukkit.jar -o true    

   Depending on the name of the file you downloaded earlier, you may need to change `craftbukkit.jar` to match the exact name of the file.

4. Save the file in your CraftBukkit folder as `start_server.command`.

5. You will need to be able to run this newly created file, so follow these steps:

    a. Open the Terminal application. (To find it, click the magnifying glass icon and type Terminal in the Spotlight field.)
    b.  Press chmod a`x (don't hit Enter yet).
    c. Find the file you just created in the Finder and drag and drop it into the Terminal window.
	d. The name of the file you just dropped into the Terminal window will be appended to the chmod a`x command, so you can now hit Enter.
    
6. Start the server by double-clicking the `start_server.command` file. 

7. To stop the server, issue the `stop` command in the Terminal window (type `stop` and then hit Enter).

If you run into trouble installing CraftBukkit, you can find plenty of useful tips and troubleshooting on the CraftBukkit Wiki website at *http://wiki.bukkit.org/Setting_up_a_server*. 
    
### Installing Bukkit on Linux (Ubuntu)

1. Open Text Editor by clicking the Dash Home button in the top-left corner of the screen; then type `Edit` to see a list of editors (you can choose Text Editor or another editor of your choice).

2. Type the following into the editor:
[KIM: code block here]
        #!/bin/sh
        BINDIR=$(dirname "$(readlink -fn "$0")")
        cd "$BINDIR"
        java -Xmx1024M -jar craftbukkit.jar -o true

   Depending on the name of the file you downloaded earlier, you may need to change `craftbukkit.jar` to match the exact name of the file.

3. Save the file as `craftbukkit.sh` in the folder you created earlier (the same folder where you copied the craftbukkit JAR file).

4. You will need to make this new file executable. In Nautilus (Linux's File browser) right-click the file and select Properties. In the Properties dialog, click the Permissions tab and ensure that the Execute checkbox is ticked. (You can also make the file executable by issuing the Unix command `chmod `x craftbukkit.sh` from the folder where you saved the file.

5. Launch the Terminal application and type `~/craftbukkit/craftbukkit.sh` (assuming you created a folder called `craftbukkit` in your home folder).

6. Once the CraftBukkit server console has launched, you can stop it by issuing the CraftBukkit `stop` command (type `stop` and then hit Enter).




## Configuring Your Server
Once you've installed CraftBukkit, the next step is configuration. This is where you decide what kind of Minecraft server you want to run. Will it have Monsters? Will it be Survival mode or Creative mode? Will it be player vs. player, and so on? While configuration is something you'll probably only do once, you can later change the server configuration at any time you like. The server configuration isn't set in stone; just bear in mind you will need to restart your server if you change the configuration. 

[AU: can you clarify later when? by naming the section or chapter?]
[WALTER: I've removed this sentence: I'll show you how to do that later. I show how a couple of paragraphs on]

### The server.properties File
When you first launch CraftBukkit, a couple of configuration files and folders will be created in the CraftBukkit folder (the folder where you store the craftbukkit JAR file and startup script). When configuring your server, the most important file is `server.properties`. This is a plain-text file (meaning it can be edited using any text editor) containing all of the configuration for your server. The first few lines of my own `server.properties` look like this:
[KIM: code block here]
    #Minecraft server properties
    #Sun Apr 20 11:11:20 IST 2014
    generator-settings=
    op-permission-level=4
    allow-nether=false
    level-name=world
    enable-query=false
    allow-flight=false
    announce-player-achievements=true
    server-port=25565
    level-type=FLAT

The first two lines&mdash;the lines that begin with a `#` character (also known as the *hash symbol*)&mdash;are comments, so they are ignored by the server. The configuration begins properly on line 3, `generator-settings=`, which is used for generating worlds (this has a default value of blank&mdash;no value). The settings for the server are specified using *name-value* pairs, which is programmer-speak for how settings are written. For example, `allow-flight=false` is a name-value pair where the name is `allow-flight` and the value is `false`. In property files, the name and value are separated by the = (equal) symbol. Let's look at just some of the properties you might want to change.

#### World Type
Later in the book I'll show you how to use JavaScript to create roads and skyscrapers. If you plan to eventually put your newfound programming prowess to use building large-scale places for others to visit, you'll probably want to change the `level-type` property from `DEFAULT` (Minecraft's standard setting where worlds are made of varied landscapes of hills, valleys, and oceans) to `FLAT`. In a `FLAT` world, there are no hills and no valleys, just flat terrain for as far as you can see. While this might be considered boring, it does have the advantage of being easier to build upon. If you plan to build roads, houses, and other large-scale constructions, a `FLAT` world might be the best place to start. It's not essential that `level-type` is set to `FLAT`; you can always leave this setting at `DEFAULT` and just flatten the area you want to build on first. (If you later decide to change the level-type, the setting applies only when creating new worlds. Existing worlds will not be modified.)

If you decide to create a new world and want to use a  level type other than `DEFAULT`, you have two options.

[AU: the following should be a bullet list instead since it's either/or]
[WALTER: I changed it to a bullet list]

* Change both the `level-name` and `level-type` properties to create a new world while keeping the old world. (The old world will not be wiped out&mdash;it will still be on your computer stored in the `world` folder.) This is the best option if you want to keep your existing world data. You need to change the `level-name` setting to something other than `world` (the default value). Call your new world something memorable like `flat-world`. 

* If you don't care about keeping the existing world, delete the `world` folder from the CraftBukkit folder and change the `level-type` property. The next time the server starts, a new world and a new `world` folder will be created.

#### Monsters
The next setting you'll probably want to change is the `spawn-monsters` setting. This determines whether monsters will be spawned. By default it's set to `true`, which means monsters will appear at night. I recommend changing this setting from `true` to `false` because the last thing you need while learning to program is to be attacked by giant spiders. You can change this setting any time you like. The setting won't take effect until you restart the server. I'll talk about starting and stopping the server shortly.

#### Game Mode
For the same reason I suggest making your server a monster-free zone, I also suggest changing your server's `gamemode` property from 0 (Survival) to 1 (Creative). In Survival mode, you will need to constantly seek food and be careful not to fall. In Creative mode, you can give your full attention to learning to program.

### The ops.json File

The `ops.json` file is a configuration file listing all of the *operators* for the server. Operators are players who have special privileges on the server. Operators (also sometimes called *administrators* or *admins*) are responsible for keeping the server running and ensuring that players play nice and don't grief. If players don't play nice, operators have to power to ban or kick players off the server using special commands available only to them. 

There may already be an `ops.json` file present in your CraftBukkit folder. If there isn't, then one will be created automatically when you run the `op` command from the server console. You will need to be an operator to issue JavaScript commands in the game, so one of the first things you should do once you've installed the Minecraft server is make yourself an operator by issuing the `op username` command, replacing [username` with your own Minecraft username. For example, I would issue the command `op walterh` because `walterh` is my Minecraft username. ScriptCraft&mdash;the plugin you'll install later&mdash;allows only operators to issue JavaScript commands.

You're done with all of the server configuration you'll need for now. If you want to delve deeper into server configuration, a good place to start is by reading the *http://minecraft.gamepedia.com/Server.properties* page.

## Basic Server Administration Commands
CraftBukkit's usefulness as a Minecraft server comes from its ability to be extended and made more interesting by adding plugins. Many of the high-profile public Minecraft servers actually run CraftBukkit because of the wide range of server plugins available for it. Popular Minecraft mini-games like Hunger Games and Spleef are all CraftBukkit plugins. In this book you'll use just one plugin&mdash;ScriptCraft&mdash;which lets operators extend the game using JavaScript. There are just a few things you'll need to know about server administrator to get the most from this book. 

### Starting and Stopping Your Server
To start your Minecraft server, double-click the startup script you created earlier in this chapter. This launches the Minecraft server in a Terminal window. The Terminal window will look something like Figure 1.13.

[AUTHOR NOTE: images/chapter-01/server-console.png]

![](images/chapter-01/server-console.png)

<caption>Figure 1.13: The Minecraft server console window</caption>


Don't worry if your Terminal window doesn't look exactly like this or has slightly different content. The important thing is that after starting up, your server should display a server console prompt&mdash;`>` (right arrow symbol)&mdash;in the bottom left of the screen along with a blinking cursor. This is called the *server console*, and you can issue administration commands here even if you aren't an operator. Try it: issue the `help` command to see the full list of commands you can use as the server console user.

In the server console window, you don't need to put a `/` (forward slash symbol) in front of commands the way you do in the Minecraft Client. So you simply type the command name instead of `/` followed by the command name. So remember `help` instead of `/help`, `toggledownfall` instead of `/toggledownfall` and so on. 

Another thing to note about the server console is that when you enter commands there, you do so as a special player called CONSOLE. In Minecraft the `/me` command is used to send a message to other players in the form of *yourname action*. For example, if *I* issue the command `/me sneezes` in the Minecraft client, all other players on the server will see `walterh sneezes`. However, if you issue the same command in the server console, you will see `* @ sneezes` instead of your own name. CONSOLE is not visible to other players and does not inhabit the Minecraft world. Normally only the person who starts the server can issue commands as CONSOLE.

To stop the server, you should issue the `stop` command at the server console. If you plan to administer a Minecraft server for others to play, the `stop` command will come in handy whenever you want to shut down the server for maintenance or troubleshooting.

### Reloading Plugins

Another useful command you should know about is the `reload` command. This command will unload all of the server's plugins and then load them up again. This is a faster and more convenient way of reloading plugins than shutting down the server and restarting it. If you manage a server with many players connected and want to install a new version of a plugin, then the `reload` command lets you load the plugin without shutting down your server and disconnecting players.

## Connecting to Your Server
To check that your server is running and accepting connections, follow these steps:

1. Launch the Minecraft game as you would normally. 
2. Once Minecraft has launched and you have logged in, click the Multiplayer button.
3. If this is the first time you're connecting to your own server, click the Add Server button. If it's not the first time you've connected to your own server, skip to step 8.
4. Fill in the Server Name field. You can call the server any name you like. The default name, Minecraft Server, will do if you can't think of something imaginative right now.
5. In the Server Address field, you should type `localhost` . As mentioned earlier, localhost is a special server address meaning "the same computer." You could also use 127.0.0.1, which is the IP address of localhost (servers usually have a name and/or address, and it's usually possible to connect to them using either name or address). Use either localhost *or* 127.0.0.1 but not both; either one will do fine.
6. Once you've entered the server address, click the Done button. 
7. The new server you just added should appear in the list of servers. If it's not visible, use the scroll bar to scroll down. If you have already added other servers, it may not appear at the top of the list. Because you've added this server using the Add Server button rather than the Direct Connect button, it should appear in the list of multiplayer servers every time you launch Minecraft.
8. Select the server and click the Join Server button. 

If you get an error when trying to connect, ensure that your server is first running (see the earlier section on starting your server). If your server is not running, you will see an error "Failed to connect to the server. java.net.ConnectException: Connection refused:." If you see this error, click the Back to Title Screen button; then start your server and try again. 

Once you've logged into your server, take a look around. It's important that you have operator (administrator) privileges on your own server. You can check that you have the right privileges by issuing the `/time set 4000` command. If you can run this command without error, then you're all set up. If you see a warning message "You do not have permission to perform this command," then you'll need to make yourself an operator at the server console window. Switch to the server console window (Alt`Tab on Windows, Cmd`Tab on OS X) and type `op <player>`, replacing <player> with your own username; then switch back to the Minecraft game and try issuing the `/time set 4000` command from the in-game prompt. Once you've verified you have operator permissions, kick back and relax. Or, if you have a spare computer on your home network, invite a friend or family member to join you on your server. If this is the first time you've played Minecraft multiplayer with friends or family, you'll have great fun.

## Achievement Unlocked!
![](images/achievement-plugin-dev-1.png)

By now you should have your very own Minecraft server installed and running. Congratulations, you're well on your way to becoming a Minecraft modder!

## Other Server Options
Other Minecraft server options are available, but installing and running your own server is the only sensible option if you want to start modding. 

### Commercial Minecraft Hosting
Once you've mastered server administration and modding, you might eventually decide to use one of the many commercial Minecraft hosting plans available online. These Minecraft hosting providers usually charge a monthly fee, so they are not free. For your money, they provide you with a Minecraft server you and your friends can connect to and play. They usually offer managed install of plugins through a web-based administration portal (a web page where you can choose which plugins your server should use). Commercial Minecraft hosting isn't cheap, and it's not as flexible as running your own server. You certainly don't need to sign up to commercial Minecraft hosting to get the most from this book. You can find a list of Minecraft hosting providers by searching for *Minecraft Hosting* online.

### Minecraft Realms
Mojang have rolled out its own Minecraft hosting solution&mdash;Minecraft Realms&mdash;throughout the world. Minecraft Realms does not currently support plugins of any kind, although that may change in the future. 

</body></html>
